<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Post Flashcard</title>
    <link rel="icon" type="image/x-icon" href="/orchid.png">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #2d1b69 0%, #1a0f3d 50%, #0f0722 100%);
            min-height: 100vh;
            color: #e8e4f0;
            padding: 20px;
            position: relative;
            overflow-x: hidden;
        }

        /* Subtle background pattern for focus */
        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: 
                radial-gradient(circle at 20% 20%, rgba(138, 43, 226, 0.1) 0%, transparent 50%),
                radial-gradient(circle at 80% 80%, rgba(75, 0, 130, 0.1) 0%, transparent 50%);
            pointer-events: none;
            z-index: -1;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            padding: 40px 20px;
        }

        .header {
            text-align: center;
            margin-bottom: 40px;
        }

        .header h1 {
            font-size: 2.5rem;
            font-weight: 600;
            margin-bottom: 10px;
            text-shadow: 0 2px 4px rgba(0,0,0,0.3);
        }

        .header p {
            font-size: 1.1rem;
            opacity: 0.9;
            margin-bottom: 20px;
        }

        .question-section {
            margin-bottom: 40px;
        }

        .question-label {
            font-size: 1.2rem;
            font-weight: 600;
            margin-bottom: 15px;
            display: block;
        }

        .question-input {
            width: 100%;
            min-height: 120px;
            padding: 20px;
            border: 2px solid rgba(138, 43, 226, 0.3);
            border-radius: 15px;
            background: rgba(138, 43, 226, 0.1);
            color: #e8e4f0;
            font-size: 1.1rem;
            font-family: inherit;
            resize: vertical;
            backdrop-filter: blur(10px);
            transition: all 0.3s ease;
        }

        .question-input:focus {
            outline: none;
            border-color: rgba(138, 43, 226, 0.6);
            background: rgba(138, 43, 226, 0.2);
            box-shadow: 0 0 0 3px rgba(138, 43, 226, 0.1);
        }

        .question-input::placeholder {
            color: #b19cd9;
        }

        .answers-section {
            margin-bottom: 40px;
        }

        .answers-label {
            font-size: 1.2rem;
            font-weight: 600;
            margin-bottom: 20px;
            display: block;
        }

        .answer-option {
            display: flex;
            align-items: center;
            margin-bottom: 15px;
            position: relative;
        }

        .answer-option:last-child {
            margin-bottom: 0;
        }

        .correct-indicator {
            width: 24px;
            height: 24px;
            border-radius: 50%;
            border: 3px solid rgba(138, 43, 226, 0.3);
            margin-right: 15px;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            flex-shrink: 0;
        }

        .correct-indicator.selected {
            border-color: #2ecc71;
            background: #2ecc71;
        }

        .correct-indicator.selected::after {
            content: 'âœ“';
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            color: white;
            font-size: 14px;
            font-weight: bold;
        }

        .answer-input {
            flex: 1;
            padding: 15px 20px;
            border: 2px solid rgba(138, 43, 226, 0.3);
            border-radius: 8px;
            background: rgba(138, 43, 226, 0.1);
            color: #e8e4f0;
            font-size: 1rem;
            font-family: inherit;
            backdrop-filter: blur(10px);
            transition: all 0.3s ease;
        }

        .answer-input:focus {
            outline: none;
            border-color: rgba(138, 43, 226, 0.6);
            background: rgba(138, 43, 226, 0.2);
            box-shadow: 0 0 0 3px rgba(138, 43, 226, 0.1);
        }

        .answer-input::placeholder {
            color: #b19cd9;
        }

        .answer-prefix {
            font-weight: 600;
            margin-right: 10px;
            font-size: 1.1rem;
        }

        .actions {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 40px;
        }

        .btn {
            padding: 15px 30px;
            border: none;
            border-radius: 8px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            position: relative;
        }

        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }

        .btn-primary {
            background: linear-gradient(45deg, #8a2be2, #9932cc);
            color: white;
            box-shadow: 0 4px 15px rgba(138, 43, 226, 0.3);
            border: 1px solid rgba(138, 43, 226, 0.5);
        }

        .btn-primary:hover:not(:disabled) {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(138, 43, 226, 0.4);
            background: linear-gradient(45deg, #9932cc, #a642db);
        }

        .btn-secondary {
            background: rgba(138, 43, 226, 0.1);
            color: #e8e4f0;
            border: 2px solid rgba(138, 43, 226, 0.3);
        }

        .btn-secondary:hover {
            background: rgba(138, 43, 226, 0.2);
            border-color: rgba(138, 43, 226, 0.5);
        }

        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 2px solid #ffffff;
            border-radius: 50%;
            border-top-color: transparent;
            animation: spin 1s ease-in-out infinite;
            margin-left: 10px;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        .status-message {
            text-align: center;
            padding: 15px;
            margin-top: 20px;
            border-radius: 8px;
            font-weight: 500;
            display: none;
        }

        .status-success {
            background: rgba(46, 204, 113, 0.2);
            color: #2ecc71;
            border: 1px solid rgba(46, 204, 113, 0.3);
        }

        .status-error {
            background: rgba(231, 76, 60, 0.2);
            color: #e74c3c;
            border: 1px solid rgba(231, 76, 60, 0.3);
        }

        @media (max-width: 768px) {
            .container {
                padding: 20px 10px;
            }
            
            .header h1 {
                font-size: 2rem;
            }
            
            .actions {
                flex-direction: column;
                align-items: center;
            }
            
            .btn {
                width: 100%;
                max-width: 300px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>Post Flashcard</h1>
            <p>Create engaging quizzes with multiple choice questions</p>
        </div>

        <div class="question-section">
            <label class="question-label" for="question">Question</label>
                            <textarea 
                id="question" 
                class="question-input" 
                placeholder="Enter your question here... You can write multiple lines and provide detailed context for your quiz question."
            ></textarea>
        </div>

        <div class="answers-section">
            <label class="answers-label">Answer Options</label>
            
            <div class="answer-option">
                <div class="correct-indicator" onclick="selectCorrect(0)"></div>
                <span class="answer-prefix">A)</span>
                <input 
                    type="text" 
                    class="answer-input" 
                    placeholder="Enter answer option A" 
                    data-option="A"
                >
            </div>

            <div class="answer-option">
                <div class="correct-indicator" onclick="selectCorrect(1)"></div>
                <span class="answer-prefix">B)</span>
                <input 
                    type="text" 
                    class="answer-input" 
                    placeholder="Enter answer option B" 
                    data-option="B"
                >
            </div>

            <div class="answer-option">
                <div class="correct-indicator" onclick="selectCorrect(2)"></div>
                <span class="answer-prefix">C)</span>
                <input 
                    type="text" 
                    class="answer-input" 
                    placeholder="Enter answer option C" 
                    data-option="C"
                >
            </div>

            <div class="answer-option">
                <div class="correct-indicator" onclick="selectCorrect(3)"></div>
                <span class="answer-prefix">D)</span>
                <input 
                    type="text" 
                    class="answer-input" 
                    placeholder="Enter answer option D" 
                    data-option="D"
                >
            </div>
        </div>

        <div class="actions">
            <button class="btn btn-secondary" onclick="clearForm()">Clear All</button>
            <button class="btn btn-primary" onclick="saveQuiz()" id="saveBtn">Save Quiz</button>
        </div>

        <div class="status-message" id="statusMessage"></div>
    </div>

    <script>
        let correctAnswerIndex = -1;
        function selectCorrect(index) {
            // Remove previous selection
            document.querySelectorAll('.correct-indicator').forEach(indicator => {
                indicator.classList.remove('selected');
            });

            // Add selection to clicked indicator
            document.querySelectorAll('.correct-indicator')[index].classList.add('selected');
            correctAnswerIndex = index;
        }

        function clearForm() {
            document.getElementById('question').value = '';
            document.querySelectorAll('.answer-input').forEach(input => {
                input.value = '';
            });
            document.querySelectorAll('.correct-indicator').forEach(indicator => {
                indicator.classList.remove('selected');
            });
            correctAnswerIndex = -1;
            hideStatusMessage();
        }

        function showStatusMessage(message, type) {
            const statusDiv = document.getElementById('statusMessage');
            statusDiv.textContent = message;
            statusDiv.className = `status-message status-${type}`;
            statusDiv.style.display = 'block';
            
            // Auto-hide success messages after 5 seconds
            if (type === 'success') {
                setTimeout(() => {
                    hideStatusMessage();
                }, 5000);
            }
        }

        function hideStatusMessage() {
            const statusDiv = document.getElementById('statusMessage');
            statusDiv.style.display = 'none';
        }

        function setLoading(isLoading) {
            const saveBtn = document.getElementById('saveBtn');
            if (isLoading) {
                saveBtn.disabled = true;
                saveBtn.innerHTML = 'Saving... <div class="loading"></div>';
            } else {
                saveBtn.disabled = false;
                saveBtn.innerHTML = 'Save Quiz';
            }
        }

        async function saveQuiz() {
            const question = document.getElementById('question').value;
            const answers = Array.from(document.querySelectorAll('.answer-input')).map(input => input.value);

            // Validation
            if (!question.trim()) {
                showStatusMessage('Please enter a question', 'error');
                return;
            }

            if (answers.some(answer => !answer.trim())) {
                showStatusMessage('Please fill in all answer options', 'error');
                return;
            }
            
            if (correctAnswerIndex === -1) {
                showStatusMessage('Please select the correct answer', 'error');
                return;
            }
            
            const quiz = {
                question: question.trim(),
                answers: answers.map(answer => answer.trim()),
                correctAnswer: correctAnswerIndex,
            };

            try {
                const response = await fetch('/group/create-flashcard', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(quiz)
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                
                setLoading(true);
                hideStatusMessage();
                const result = await response.json();
                
                showStatusMessage('Flashcard saved successfully! Redirecting...', 'success');
                console.log('Quiz saved:', result);
                // Redirect after successful save
                setTimeout(() => {
                    window.location.href = '/group/dashboard';
                    setLoading(false);
                }, 2000);
                
            } catch (error) {
                console.error('Error saving quiz:', error);
                showStatusMessage('This flashcard question already exists', 'error');
            } finally {
            }
        }
    </script>
</body>
</html>