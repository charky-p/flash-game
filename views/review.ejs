<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Focus Quiz - Question</title>
    <link rel="icon" type="image/x-icon" href="/orchid.png">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #2d1b69 0%, #1a0f3d 50%, #0f0722 100%);
            min-height: 100vh;
            color: #e8e4f0;
            display: flex;
            flex-direction: column;
            position: relative;
            overflow-x: hidden;
        }

        /* Subtle background pattern for focus */
        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background:
                radial-gradient(circle at 20% 20%, rgba(138, 43, 226, 0.1) 0%, transparent 50%),
                radial-gradient(circle at 80% 80%, rgba(75, 0, 130, 0.1) 0%, transparent 50%);
            pointer-events: none;
            z-index: -1;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 20px 30px;
            background: rgba(0, 0, 0, 0.3);
            backdrop-filter: blur(10px);
            border-bottom: 1px solid rgba(138, 43, 226, 0.3);
        }

        .back-button {
            background: linear-gradient(45deg, #6a4c93, #8b5a9f);
            border: none;
            padding: 12px 24px;
            border-radius: 25px;
            color: white;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(138, 43, 226, 0.3);
            border: 1px solid rgba(138, 43, 226, 0.5);
        }

        .back-button:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(138, 43, 226, 0.4);
            background: linear-gradient(45deg, #7b5aa6, #9d6bb2);
        }

        .quiz-container {
            flex: 1;
            display: flex;
            flex-direction: column;
            justify-content: center;
            max-width: 800px;
            margin: 0 auto;
            padding: 40px 30px;
            width: 100%;
        }

        .question-section {
            text-align: center;
            margin-bottom: 50px;
        }

        .question-number {
            font-size: 18px;
            color: #b19cd9;
            margin-bottom: 20px;
            font-weight: 500;
        }

        .question-text {
            font-size: 28px;
            font-weight: 600;
            line-height: 1.4;
            color: #ffffff;
            text-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
            margin-bottom: 10px;
        }

        .answers-section {
            display: flex;
            flex-direction: column;
            gap: 16px;
            margin-bottom: 50px;
        }

        .answer-option {
            background: rgba(138, 43, 226, 0.1);
            border: 2px solid rgba(138, 43, 226, 0.3);
            border-radius: 15px;
            padding: 20px 25px;
            font-size: 18px;
            color: #e8e4f0;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            backdrop-filter: blur(5px);
            overflow: hidden;
        }

        .answer-option::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(138, 43, 226, 0.1), transparent);
            transition: left 0.5s ease;
        }

        .answer-option:hover::before {
            left: 100%;
        }

        .answer-option:hover {
            transform: translateX(10px);
            border-color: rgba(138, 43, 226, 0.6);
            background: rgba(138, 43, 226, 0.2);
            box-shadow: 0 5px 20px rgba(138, 43, 226, 0.3);
        }

        .answer-option.selected {
            background: rgba(138, 43, 226, 0.3);
            border-color: #8a2be2;
            color: white;
            transform: translateX(10px);
            box-shadow: 0 5px 20px rgba(138, 43, 226, 0.4);
        }

        .answer-option.correct {
            background: rgba(46, 204, 113, 0.3);
            border-color: #2ecc71;
            color: white;
        }

        .answer-option.incorrect {
            background: rgba(231, 76, 60, 0.3);
            border-color: #e74c3c;
            color: white;
        }

        .answer-option.disabled {
            cursor: not-allowed;
            opacity: 0.7;
        }

        .controls {
            display: flex;
            justify-content: flex-end;
            padding: 0 30px 30px;
        }

        .confirm-button, .next-button { /* Added .next-button to styles */
            background: linear-gradient(45deg, #8a2be2, #9932cc);
            border: none;
            padding: 15px 35px;
            border-radius: 30px;
            color: white;
            font-size: 18px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 6px 20px rgba(138, 43, 226, 0.4);
            border: 1px solid rgba(138, 43, 226, 0.5);
            min-width: 150px;
            text-decoration: none; /* For the link */
            display: inline-block; /* For the link */
            text-align: center; /* For the link */
        }

        .confirm-button:hover, .next-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(138, 43, 226, 0.5);
            background: linear-gradient(45deg, #9932cc, #a642db);
        }

        .confirm-button:disabled {
            background: rgba(138, 43, 226, 0.3);
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .next-button { /* Specific style for the next button */
            background: linear-gradient(45deg, #2ecc71, #27ae60);
        }

        .next-button:hover {
            background: linear-gradient(45deg, #27ae60, #229954);
        }

        .streak-counter {
            display: flex;
            align-items: center;
            justify-content: right;
            gap: 10px; /* Space between icon and text */
            font-size: 24px; /* Larger font for visibility */
            font-weight: 700;
            color: #ffaa00; /* Warm color for fire */
            text-shadow: 0 0 8px rgba(255, 170, 0, 0.6);
            opacity: 1; /* Hidden by default */
            transform: translateY(20px); /* Start below and animate up */
            transition: all 0.5s ease-out;
            z-index: 10;
        }

        .streak-counter.active {
            opacity: 1;
            transform: translateY(0);
        }

        .streak-fire-icon {
            font-size: 28px; /* Slightly larger icon */
            animation: pulseFire 1.5s infinite ease-in-out; /* Pulsing animation */
        }

        @keyframes pulseFire {
            0% { transform: scale(1); opacity: 1; }
            50% { transform: scale(1.1); opacity: 0.8; }
            100% { transform: scale(1); opacity: 1; }
        }

        /* Adjust header to accommodate the streak counter */
        .header {
            position: relative; /* Make header a positioning context for the streak */
            /* ... existing header styles ... */
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .quiz-container {
                padding: 20px 20px;
            }
            
            .question-text {
                font-size: 24px;
            }
            
            .answer-option {
                padding: 16px 20px;
                font-size: 16px;
            }
            
            .header {
                padding: 15px 20px;
            }
        }

        /* Focus animations */
        .question-text {
            animation: fadeInUp 0.6s ease-out;
        }

        .answer-option {
            animation: fadeInLeft 0.6s ease-out;
        }

        .answer-option:nth-child(1) { animation-delay: 0.1s; }
        .answer-option:nth-child(2) { animation-delay: 0.2s; }
        .answer-option:nth-child(3) { animation-delay: 0.3s; }
        .answer-option:nth-child(4) { animation-delay: 0.4s; }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes fadeInLeft {
            from {
                opacity: 0;
                transform: translateX(-30px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }
    </style>
</head>
<body>
    <div class="header">
        <div></div>
        <button class="back-button" onclick="goBack()">‚Üê Back</button>
    </div>

    <div class="quiz-container">
        <div class="question-section">
            <div id="streakCounter" class="streak-counter">
                <span class="streak-fire-icon">üî•<span id="streakText">1 Streak</span></span>
            </div>
          <div class="question-text"><%=question%></div>
        </div>

        <div class="answers-section">
            <div class="answer-option" onclick="selectAnswer(0)">A) <%= answers[0]%></div>
            <div class="answer-option" onclick="selectAnswer(1)">B) <%= answers[1]%></div>
            <div class="answer-option" onclick="selectAnswer(2)">C) <%= answers[2]%></div>
            <div class="answer-option" onclick="selectAnswer(3)">D) <%= answers[3]%></div>
            <div class="answer-option" onclick="selectAnswer(4)">I don't know</div>
        </div>
    </div>

    <div class="controls">
        <button class="confirm-button" id="confirmBtn" onclick="confirmAnswer()" disabled>
            Confirm Answer
        </button>
        <a id="nextQuestionLink" class="next-button" style="display: none;" href="/group/review-flashcards">Next Question</a>
    </div>

    <script>
        let selectedAnswer = null;
        let isAnswerConfirmed = false;
        let currentStreak = 1;

        // Function to update and display the streak
        function updateStreakDisplay() {
            const streakCounter = document.getElementById('streakCounter');
            const streakText = document.getElementById('streakText');

            if (currentStreak > 0) {
                streakText.textContent = `${currentStreak} Streak`;
                streakCounter.style.display = 'flex'; // Show the counter
                // Trigger animation by adding/removing 'active' class
                streakCounter.classList.remove('active');
                void streakCounter.offsetWidth; // Trigger reflow
                streakCounter.classList.add('active');
            } else {
                streakCounter.classList.remove('active');
                // You might want to hide it completely if streak is 0
                // setTimeout(() => { streakCounter.style.display = 'none'; }, 500); // Hide after animation
            }
        }

        function selectAnswer(index) {
            if (isAnswerConfirmed) return;

            const options = document.querySelectorAll('.answer-option');

            // Remove previous selection
            options.forEach(option => option.classList.remove('selected'));

            // Select new option
            options[index].classList.add('selected');
            selectedAnswer = index;

            // Enable confirm button
            document.getElementById('confirmBtn').disabled = false;
        }

        function confirmAnswer() {
            if (selectedAnswer === null || isAnswerConfirmed) return;

            isAnswerConfirmed = true;
            const options = document.querySelectorAll('.answer-option');
            const confirmBtn = document.getElementById('confirmBtn');
            const nextQuestionLink = document.getElementById('nextQuestionLink');

            // Disable all options
            options.forEach(option => {
                option.classList.add('disabled');
                option.onclick = null; // Remove click listener
            });
            const path = window.location.pathname.replace(/\/$/, '');

            fetch(path + '/answer', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ answer: selectedAnswer })
            })
            .then(res => res.json())
            .then(data => {
              let correctAnswerIndex = data.correctAnswerIndex;
              console.log('Correct index:', correctAnswerIndex);
               // Show correct/incorrect answers
            if (selectedAnswer === correctAnswerIndex) {
                options[selectedAnswer].classList.add('correct');
                currentStreak++;
            } else {
                options[selectedAnswer].classList.add('incorrect');
                options[correctAnswerIndex].classList.add('correct'); // Highlight the correct one
            }
            });

            // Hide the confirm button
            confirmBtn.style.display = 'none';

            // Show the next question link
            nextQuestionLink.style.display = 'inline-block';
        }

        function goBack() {
            // This will simply go back to the previous page in browser history
            if (confirm('Are you sure you want to go back?')) {
              window.location.href = '/group/dashboard';
            }
        }
    </script>
</body>
</html>